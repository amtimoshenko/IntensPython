import math

G = 9.81 

def calculate_flight_time(H, V, alpha):
    return (V * math.sin(alpha) / G) * (1 + math.sqrt(1 + (2 * G * H) / (V**2 * math.sin(alpha)**2)))

def calculate_flight_time_binary_search(H, V, alpha, tolerance=0.0001):
    left = 0.0  
    right = 100.0  

    def y(t):
        return H + V * t * math.sin(alpha) - G * t**2 / 2

    while right - left > tolerance:
        middle = (left + right) / 2.0

        if y(middle) > 0:
            left = middle
        else:
            right = middle

    return (left + right) / 2.0  


if __name__ == "__main__":
    H = float(input("Введите высоту обрыва H (в метрах): "))
    V = float(input("Введите начальную скорость камня V (в м/с): "))
    alpha = float(input("Введите угол броска alpha (в радианах): "))
    t = float(input("Введите время t (в секундах): "))

    x = V * t * math.cos(alpha)
    y = H + V * t * math.sin(alpha) - G * t**2 / 2

    print("Положение камня в момент времени t:")
    print(f"x(t) = {x} м")
    print(f"y(t) = {y} м")

    fell = "Да" if y <= 0 else "Нет"
    print(f"Камень упал на дно обрыва? {fell}")

    flight_time_analytic = calculate_flight_time(H, V, alpha)
    flight_time_numeric = calculate_flight_time_binary_search(H, V, alpha)

    print(f"Время полета камня (аналитически): {flight_time_analytic} с")
    print(f"Время полета камня (численно, метод половинного деления): {flight_time_numeric} с")
