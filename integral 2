#include <iostream>
#include <math.h>
#include <cmath>

using namespace std;

double trapecia_integral(double (*function)(double), double a, double b, int n) {
    double x, h;
    double sum = 0.5 * (function(a) + function(b));
    h = (b - a) / n;

    for (int i = 0; i < n; i++) {
        x = a + i * h;
        sum += function(a + i * h);
    }
    return (sum * h);
}

double function(double x) {
    return (exp(-2*x)*sin(2*x));
}

int main() {
    double a, b, eps;
    double s1, s;
    int n = 1;
    a = 0;
    b = 10;
    eps = 1e-6;
    s1 = trapecia_integral(function, a, b, n);
    do {
        s = s1;
        n = 2 * n;
        s1 = trapecia_integral(function, a, b, n);
    } while (fabs(s1 - s) > eps);
    cout << "Integral=" << s1 << endl;
}
